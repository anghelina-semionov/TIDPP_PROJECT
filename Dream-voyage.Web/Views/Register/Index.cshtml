@{
    Layout = "~/Views/Shared/_RnALayout.cshtml";
    ViewBag.Title = "Регистрация";
}

@model Dream_voyage.Web.Models.UserRegister


@Html.ValidationSummary(true)
@using (Html.BeginForm("Index", "Register", FormMethod.Post, new { @id = "RegisterForm" }))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-header">
            <div class="card-title">Регистрация</div>
        </div>
        <div class="card-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">

                @Html.TextBoxFor(m => m.Username, new
           {
               placeholder = "Логин",
               //title = "Логин",
               value = "",
               name = "username",
               id = "username",
               @class = "form-control"
           })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">

                @Html.TextBoxFor(m => m.Password, new

           {
               @class = "form-control",
               type = "password",
               //title = "Пароль",
               placeholder = "Пароль",
               value = "",
               name = "password",
               id = "password"
           })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
            <div class="form-group mb-0 text-center">
                <input type="submit" value="Создать аккаунт">
            </div>
        </div> 
    </div>
                   
}

@section Scripts {
    @Scripts.Render("~/bundles/validation/js")

    <script type="text/javascript">
        $(function () {

            $("#RegisterForm").validate({
                rules: {
                    Username: {
                        required: true
                    },
                    Password: {
                        required: true
                    }
                },
                submitHandler: function (form) {
                    form.submit();
                },
                errorPlacement: function (error, element) {
                    $(element)
                        .closest("form")
                        .find("label[for='" + element.attr("id") + "']")
                        .append(error);
                },
                errorElement: "span"
            });
        });
    </script>
}
